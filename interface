import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class wordGuess {
	
	
	public static String getAnagram(String str){
		String original = "str";
        char[] chars = original.toCharArray();
        Arrays.sort(chars);
        String sorted = new String(chars);
        return sorted;
	}

public static void  generateMap(String address, int length) throws IOException {
	
	
	
	File file = new File("");
	BufferedReader br = new BufferedReader(new FileReader(file));
	String currWord = "";
	while((currWord = br.readLine()) != null) {
		if(currWord.length() == length )
		{
			String anagram = getAnagram(currWord);
			if(possibleWords.containsKey(anagram)){
				possibleWords.get(anagram).add(currWord);
			} else {
				List<String> tmp = new ArrayList<>();
				tmp.add(currWord);
				possibleWords.put(anagram, tmp);
				}
			}
		}
}
	
	public int length = 0;
	public  String word1 = "hiiahs";
	public  String word2 = "";
	public int[] diff = {3, 4, 5};
	static HashMap<String, List<String> >possibleWords; 
	
	
	wordGuess(String difficulty, String word2){
		
		int length = getLength(difficulty) + 3;
		this.length = diff[length];
		this.word2 = word2;
		generateMap(this.length);
		playGame();
		
	}
	
	
	public int getLength(String difficulty) {
		ArrayList<String> diff = (ArrayList<String>) Arrays.asList("easy", "medium", "hard");
		return diff.indexOf(difficulty);
	}
	
	public void playGame()
	{
		String guess1 = "";
		String guess2 = "";
		int turn  = 1; // human turn
		while(guess2 != word1 || guess1 != word2) {
			if(turn == 1) {
				guess2 = nextGuess();
				} else 
					guess1 = nextGuess();
			}
	}
	
	

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
